# Generated by Django 4.1.2 on 2022-11-20 13:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Orders_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('0', 'COD'), ('1', 'Invocie'), ('2', 'Cash Memo'), ('3', 'Memo'), ('4', 'Hold')], db_index=True, default='1', max_length=1, verbose_name='Order Type')),
                ('order_status', models.CharField(choices=[('0', 'Rejected'), ('1', 'On verification'), ('2', 'Order accepted'), ('3', 'Delivery is in progress'), ('4', 'Delivered'), ('5', 'Completed')], db_index=True, default='1', max_length=1, verbose_name='Order Status')),
                ('order_number', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Order Number')),
                ('comment', models.CharField(blank=True, max_length=255, verbose_name='Comment')),
                ('pay_within', models.IntegerField(blank=True, verbose_name='Pay Within')),
                ('p_ct_offer', models.FloatField(blank=True, verbose_name='P/ct Offer')),
                ('total_price_offer', models.FloatField(blank=True, verbose_name='Total Price Offer')),
                ('hold_hours', models.IntegerField(blank=True, verbose_name='hold_hours')),
                ('diamonds_list', models.JSONField(verbose_name='Diamonds List')),
                ('total_diamonds', models.IntegerField(verbose_name='Total Diamonds')),
                ('total_carat', models.FloatField(verbose_name='Total Carat')),
                ('total_price', models.IntegerField(verbose_name='Total Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Orders_Diamond_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Ref')),
                ('best_selling', models.BooleanField(default=0, verbose_name='Best Selling')),
                ('cert_number', models.CharField(max_length=255, unique=True, verbose_name='Cert Number')),
                ('rap_1ct', models.IntegerField(blank=True, verbose_name='Rap_1ct')),
                ('rap_price', models.IntegerField(blank=True, null=True, verbose_name='Rap Price')),
                ('sale_price', models.IntegerField(blank=True, verbose_name='Sale Price')),
                ('disc', models.FloatField(blank=True, verbose_name='Discount')),
                ('shape', models.CharField(max_length=255, verbose_name='Shape')),
                ('clarity', models.CharField(max_length=255, verbose_name='Clarity')),
                ('color', models.CharField(max_length=255, verbose_name='Color')),
                ('girdle', models.CharField(blank=True, max_length=255, verbose_name='Gridle')),
                ('weight', models.FloatField(blank=True, max_length=255, verbose_name='Weight')),
                ('cut', models.CharField(blank=True, max_length=255, verbose_name='Cut')),
                ('polish', models.CharField(blank=True, max_length=255, verbose_name='Polish')),
                ('symmetry', models.CharField(blank=True, max_length=255, verbose_name='Symmetry')),
                ('culet', models.CharField(blank=True, max_length=255, verbose_name='Culet')),
                ('fluor', models.CharField(blank=True, max_length=255, verbose_name='Fluour')),
                ('length', models.FloatField(blank=True, verbose_name='Length')),
                ('width', models.FloatField(blank=True, verbose_name='Width')),
                ('depth', models.FloatField(blank=True, verbose_name='Depth')),
                ('lw', models.FloatField(verbose_name='L/W')),
                ('measurements', models.CharField(blank=True, max_length=255, verbose_name='Measurements')),
                ('lab', models.CharField(blank=True, max_length=255, verbose_name='Lab')),
                ('depth_procent', models.FloatField(blank=True, verbose_name='Depth %')),
                ('table_procent', models.FloatField(blank=True, verbose_name='Table %')),
                ('report_link', models.URLField(blank=True, verbose_name='Table %')),
                ('photo', models.URLField(blank=True, verbose_name='Image URL')),
                ('video', models.URLField(blank=True, verbose_name='Video URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('is_published', models.BooleanField(default=False, verbose_name='Is Published')),
                ('order_number', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Order Number')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_id', to=settings.AUTH_USER_MODEL, verbose_name='Buyer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.orders_model', verbose_name='Order ID')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='vendor_id')),
            ],
            options={
                'verbose_name': 'Diamond',
                'verbose_name_plural': 'Diamonds',
                'ordering': ['sale_price'],
                'abstract': False,
            },
        ),
    ]
