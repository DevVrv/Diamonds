"use strict";class Sort{constructor(kwargs){this.simple={},this.advanced={},this.sort=["sale_price"],this.compare={key:!1,nums:null},this.url=kwargs.url||"sort/",this.key=kwargs.key||"result",this.cart=kwargs.cart,this.viewContainer=this._getElems(kwargs.viewContainer)[0],this.simple.container=this._getElems(kwargs.simpleContainer,document),this.simple.elems=this._getElems("[data-sort-simple]",this.simple.container[0]),this.advanced.container=this._getElems(kwargs.advancedContainer),this.advanced.elems=this._getElems("[data-sort-advanced]",this.advanced.container[0]),this.advanced.priority=this._getElems("[data-sort-priority]",this.advanced.container[0]),this.advanced.by=this._getElems("[data-sort-by]",this.advanced.container[0]),this.advanced.plus=this._getElems(".fa-plus",this.advanced.container[0]),this.advanced.angle=this._getElems(".fa-angle-down",this.advanced.container[0]),1==kwargs.debug&&this._debug()}init(){return this._simpleListener(),this._plusListener(),this._angleListener(),this._dragInit(),this._dragListener(),this}_debug(log=this){console.log(this)}_dragInit(){this.sortable=new Sortable(this.advanced.priority[0],{animation:200,handle:".drag-handle"})}spinerView(action="get",container){if("get"==action){const spin='\n            <div class="text-center text-primary py-4 shadow-sm w-100 bg-lite border-bottom border-top my-1" id="loading-spiner">\n                <div class="spinner-border" role="status">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n            </div>\n            ';return spin}if("remove"==action){null==container&&(container=this.container);const spin=container.querySelector("#loading-spiner");null!=spin&&spin.remove()}else if("has"==action){null==container&&(container=this.container);const spin=container.querySelector("#loading-spiner");return null!=spin}}getDiamondHTML(diamond){parent.innerHTML="";let photo='<img src="/static/img/diamonds/base-diamond.jpg" alt="" class="img-fluid rounded">';const date=deliveryDate(),diamondHTML=`\n        <div class="result__item result-section--element">\n    \n        <ul class="item-list result__item-list">\n            <li class="item-list-element">\n                <i class="item-shape svg-${diamond.fields.shape.toLowerCase()}"></i>\n                <i class="fa fa-video-camera ms-2" aria-hidden="true"></i>\n                <i class="fa fa-chevron-down ms-2" aria-hidden="true"></i>\n            </li>\n            <li class="item-list-element">\n                <div class="checkbox-label label-result" data-io-label="diamonds-item">\n                    <input type="checkbox" name="chb_${diamond.pk}" id="chb_${diamond.pk}" class="d-none checkbox checkbox-results">\n                    <i class="fa fa-check" aria-hidden="true"></i>\n                </div>\n            </li>\n            <li class="item-list-element">\n                <span class="me-2 shape-text-info">Shape:</span>\n                <span>${diamond.fields.shape}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Disc%:</span>\n                <span>${diamond.fields.rap_disc}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Price:</span>\n                <span>$${diamond.fields.sale_price}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Carat:</span>\n                <span>${diamond.fields.weight}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Cut:</span>\n                <span>${diamond.fields.cut}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Color:</span>\n                <span>${diamond.fields.color}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Clarity:</span>\n                <span>${diamond.fields.clarity}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">T%:</span>\n                <span>${diamond.fields.table_procent}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">D%:</span>\n                <span>${diamond.fields.depth_procent}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">L/W:</span>\n                <span>${diamond.fields.lw}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Report:</span>\n                <span>${diamond.fields.lab}</span>\n            </li>\n        </ul>\n\n        <div class="result__drop-down border-top">\n            <div class="row">\n                \n                <div class="result__drop-down--col col-3">\n                    ${photo}\n                </div>\n                \n                <div class="result__drop-down--col col-7">\n    \n                    <h4 class="h4 py-2">${diamond.fields.weight} Carat Pear Lab Diamond</h4>\n    \n                    <h5 class="h5 py-2">$${diamond.fields.sale_price}</h5>\n    \n                    <ul class="list result__info-list">\n    \n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Carat: ${diamond.fields.weight}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Color: ${diamond.fields.color}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Clarity: ${diamond.fields.clarity}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Cut: ${diamond.fields.cut}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Polish: ${diamond.fields.polish}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Symmetry: ${diamond.fields.symmetry}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Table: ${diamond.fields.table_procent}%</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Depth: ${diamond.fields.depth_procent}%</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>L/W: ${diamond.fields.lw}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Measurements: ${diamond.fields.measurements}</span>\n                        </li>\n                    </ul>\n    \n                    <div class="acordion">\n                        <button type="button" class="acordion__btn btn-more--info">\n                            Additional Details\n                            <i class="fa fa-chevron-down ms-2" aria-hidden="true"></i>\n                        </button>\n                        <div class="acordion__body body-more--info border-top w-100">\n                            <ul class="list result__drop-list">\n                                <li class="result__drop-li">\n                                    <span>Culet: ${diamond.fields.culet}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Girdle: ${diamond.fields.girdle}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Report â„–: ${diamond.fields.lab}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Fluor: ${diamond.fields.fluor}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Origin: Lab grown Diamond</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span class="d-flex w-100 flex-column">\n                                        <span>Lab Created Diamond Delivery:</span>\n                                        <span class="text-nowrap delivery_date">${date.day} ${date.dayNum} ${date.month}</span>\n                                    </span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n    \n                </div>\n                \n                <div class="result__drop-down--col col-2 d-flex flex-column justify-content-center align-items-center">\n                    <p class="mt-3 w-100 d-flex justify-content-center">\n                        <i class="fa fa-heart me-2 text-primary" aria-hidden="true"></i>\n                        <span>Only One Available</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n        `;return diamondHTML}getEmpty(message){const html=`        \n        <div class="text-center text-primary py-4 border shadow-sm w-100 bg-lite" id="empty-allert">\n            <p class="fs-5 m-0">${message}</p>\n        </div>\n        `;return html}_getElems(selector=String,parent=document){if(null==parent.length){const query=[...parent.querySelectorAll(selector)];return query}{let nodes=[];return parent.map(p=>{const childs=p.querySelectorAll(selector);nodes=[...nodes,...childs]}),nodes}}_getByKey(key){const obj={simple:null,advanced:null};return obj.advanced=this.advanced.elems.filter(elem=>{if(elem.dataset.sortAdvanced==key)return elem}),obj.simple=this.simple.elems.filter(elem=>{if(elem.dataset.sortSimple==key)return elem}),obj.simple=obj.simple[0],obj.advanced=obj.advanced[0],obj}_changeDirection(simpleElem,advanceElem,direction){"up"==direction?(simpleElem.dataset.sortDirection="down",advanceElem.dataset.sortDirection="down"):"down"==direction&&(simpleElem.dataset.sortDirection="up",advanceElem.dataset.sortDirection="up")}_simpleCleane(){this.simple.elems.map(elem=>{elem.classList.remove("active")})}_jumpAdvanced(element,mode="by"){"by"==mode?this.advanced.by[0].insertAdjacentElement("afterbegin",element):"priority"==mode&&this.advanced.priority[0].insertAdjacentElement("afterbegin",element)}_updateSort(){this.sort=[];const elems=this._getElems("[data-sort-advanced]",this.advanced.priority);elems.map(elem=>{let key=elem.dataset.sortAdvanced;const direction=elem.dataset.sortDirection;"down"==direction&&(key=`-${key}`),this.sort.push(key)}),"compare"!=this.sort[0]&&"-compare"!=this.sort[0]||(this.compare.key=this.sort[0],this.compare.nums=JSON.parse(localStorage.getItem("cart")),this.compare.nums=this.compare.nums.map(num=>num.replace("chb_",""))),this.sort=this.sort.filter(str=>{if("compare"!=str&&"-compare"!=str)return str}),this.apply()}checkLabel(inputs,labels){const checks=JSON.parse(localStorage.getItem("cart"));inputs.forEach((inp,index)=>{const name=inp.name;checks.forEach(check=>{name==check&&(inp.checked=!0,labels[index].classList.add("active"))})})}_dragListener(){this.advanced.dragElems=this._getElems("[data-sort-advanced]",this.advanced.priority),this.advanced.dragElems.map(d=>{d.ondragend=()=>{console.log(this),this.advanced.drag=this._getElems("[data-sort-advanced]",this.advanced.priority),this.simple.elems.map(elem=>{elem.dataset.sortSimple==this.advanced.drag[0].dataset.sortAdvanced?elem.classList.add("active"):elem.classList.remove("active")}),this._updateSort()}})}_plusListener(){this.advanced.plus.map(p=>{p.addEventListener("click",()=>{const advanceElem=p.parentElement.parentElement,simpleElem=this._getByKey(advanceElem.dataset.sortAdvanced).simple;advanceElem.classList.contains("active")?advanceElem.classList.contains("active")&&(advanceElem.classList.remove("active"),simpleElem.classList.remove("active"),this._jumpAdvanced(advanceElem,"by")):(this._simpleCleane(),advanceElem.classList.add("active"),simpleElem.classList.add("active"),this._jumpAdvanced(advanceElem,"priority")),this._dragListener(),this._updateSort()})})}_angleListener(){this.advanced.angle.map(a=>{a.addEventListener("click",()=>{const advanceElem=a.parentElement.parentElement,simpleElem=this._getByKey(advanceElem.dataset.sortAdvanced).simple,direction=advanceElem.dataset.sortDirection;this._changeDirection(simpleElem,advanceElem,direction),this._updateSort()})})}_simpleListener(){const simpleElems=this.simple.elems;simpleElems.map(simpleElem=>{simpleElem.addEventListener("click",()=>{const current=this._getByKey(simpleElem.dataset.sortSimple),direction=simpleElem.dataset.sortDirection;this._simpleCleane(),simpleElem.classList.add("active"),current.advanced.classList.add("active"),this._changeDirection(simpleElem,current.advanced,direction),this._jumpAdvanced(current.advanced,"priority"),this._dragListener(),this._updateSort()})})}apply(){this.viewContainer.innerHTML="",this.viewContainer.insertAdjacentHTML("afterbegin",this.spinerView("get")),this.data={sort:this.sort,compare:this.compare};const advanced=this.advanced.priority[0],current=advanced.querySelector("[data-sort-advanced]"),currentValue=current.dataset.sortAdvanced;"compare"!=currentValue&&(this.data.compare.key=!1,this.data.compare.nums=[]),ajax(this.url,this.data,this.updateView,this)}updateView(responce,context){context.viewContainer.innerHTML="";const diamonds=JSON.parse(responce);diamonds.map(diamond=>{context.viewContainer.insertAdjacentHTML("afterbegin",context.getDiamondHTML(diamond))});const diamondItem=new ElementsControl({manager:".result__item-list",managed:".result__drop-down"});diamondItem.toggler({single:!0,notThis:".label-result"});const diamondMoreInfo=new ElementsControl({manager:".btn-more--info",managed:".body-more--info"});diamondMoreInfo.toggler({single:!0});const diamondLabel=new ElementsControl({manager:'[data-io-label="diamonds-item"]',managed:".checkbox-results"});diamondLabel.label(context.cart.checked,context.cart.unchecked),context.checkLabel(diamondLabel.managed,diamondLabel.manager)}}class Cart{constructor(kwargs){this.deleteButton=document.querySelector(kwargs.deleteButton),this.activeKey="cart",this.container=document.querySelector(kwargs.container),this.msg=document.querySelector(kwargs.msg),this.formBuy=document.querySelector(kwargs.formBuy),this.formHold=document.querySelector(kwargs.formHold),this.formMemo=document.querySelector(kwargs.formMemo),this.formMessage=document.querySelector(kwargs.formMessage),this.total_carat=document.querySelector(kwargs.total_carat),this.total_price=document.querySelector(kwargs.total_price),this.total_stone=document.querySelector(kwargs.total_stone),this.cart_length=document.querySelector(kwargs.cart_length),this.init()}init(){return localStorage.setItem("cart",JSON.stringify([])),this.diamonds=[...this.container.querySelectorAll(".result-section--element")],this.diamonds_chb=this.diamonds.map(diamond=>diamond.querySelector('input[type="checkbox"]')),this.deleteSelected(),this.orderSubmit(this.formBuy),this.orderSubmit(this.formMemo),this.orderSubmit(this.formHold),this.msgSubmit(this.formMessage,"/cart/send_list/"),this}debug(info=this){return console.log(info),this}unchecked(value){let values=JSON.parse(localStorage.getItem("cart"));values=values.filter(v=>{if(v!==value)return v}),localStorage.setItem("cart",JSON.stringify(values))}checked(value){let values=JSON.parse(localStorage.getItem("cart"));values=values.filter(v=>{if(v!==value)return v}),values.push(value),localStorage.setItem("cart",JSON.stringify(values))}cleanInfo(){this.total_price.textContent=0,this.total_carat.textContent=0,this.total_stone.textContent=0,this.cart_length.textContent=0}updateInfo(responce){return this.total_price.textContent=Math.floor(Number(this.total_price.textContent.replace("$",""))-responce.order_data.total_price),this.total_carat.textContent=(this.total_carat.textContent-responce.order_data.total_carat).toFixed(1),this.total_stone.textContent=this.total_stone.textContent-responce.order_data.total_diamonds,this.cart_length.textContent=this.total_stone.textContent,this.total_stone.textContent}removeByKey(pks,parent=document){pks.map(key=>{const node=parent.querySelector(`#${key}`),elem=node.closest(".result-section--element");elem.remove()})}deleteSelected(){this.deleteButton.addEventListener("click",()=>{let deleteValues=JSON.parse(localStorage.getItem("cart"));this.removeByKey(deleteValues,this.container),localStorage.setItem("cart",JSON.stringify([])),0!==deleteValues.length&&(deleteValues=deleteValues.map(value=>value.replace("chb_","")),ajax("delete_selected/",deleteValues,this.afterDelete,this))})}afterDelete(responce,context){context.total_price.textContent=responce.total_price,context.total_carat.textContent=responce.total_carat,context.total_stone.textContent=responce.total_stone,context.cart_length.textContent=responce.total_stone}orderSubmit(form,url="/orders/create/"){form.addEventListener("submit",e=>{e.preventDefault();const button=form.querySelector('button[type="submit"]'),button_text=button.querySelector(".order-btn-text"),button_main_text=button_text.textContent;button_text.textContent="Order creating",button.classList.add("active"),button.setAttribute("disabled",!0),this.active_button={text:button_main_text,btn_text:button_text,btn:button};const formData={},inputs=[...form.querySelectorAll("input, textarea")];inputs.map(input=>{("radio"==input.type&&input.checked||"radio"!==input.type)&&(formData[input.name]=input.value)});for(let key in formData)"pay_within"!=key&&"p_ct_offer"!=key&&"total_price_offer"!=key||(formData[key]=0);const cartChecked=JSON.parse(localStorage.getItem("cart"));cartChecked&&(formData.checked=cartChecked.map(item=>item.replace("chb_",""))),ajax(url,formData,this.afterSubmit,this)})}afterSubmit(responce,context){const emptyCart='\n            <div class="w-100 py-4 d-flex align-items-center justify-content-center border flex-column">\n                <h3 class="h3 text-success">Your shopping cart is empty</h3>\n                <p class="text-dark fs-5">\n                    <span>\n                        Go to Products\n                    <span>\n                    <a href="/filter/" class="text-success">Filter</a>\n                </span></span></p>\n            </div>\n        ',shopping_alert=document.querySelector(".shopping_alert"),forms=[context.formBuy.parentElement.parentElement,context.formMemo.parentElement.parentElement,context.formHold.parentElement.parentElement],close_btns=[];forms.map(form=>{let btn=form.querySelector(".btn-close");close_btns.push(btn)}),close_btns.map(btn=>{btn.click()});const btn=context.active_button.btn,btn_text=context.active_button.btn_text,btn_old_text=context.active_button.text;btn.classList.remove("active"),btn.removeAttribute("disabled"),btn_text.textContent=btn_old_text,"success"==responce.alert?shopping_alert.innerHTML=`<div class="alert alert-success mt-2 shadow-sm alert-dismissible fade show border-0" role="alert">\n                                            <div class="my-2">\n                                                <div class="d-flex align-items-center justify-content-center">\n                                                    <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                                                    <h5 class="h5 m-0 p-0">Your order was created ! Order number: #${responce.order_data.order_number} - Go to <a href="/orders/" class="link">Orders</a></h5>\n                                                </div>\n                                                <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                                            </div>\n                                        </div>\n            `:"empty"==responce.alert?shopping_alert.innerHTML='<div class="alert alert-warning mt-2 shadow-sm alert-dismissible fade show border-0" role="alert">\n                                            <div class="my-2">\n                                                <div class="d-flex align-items-center justify-content-center">\n                                                    <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                                                    <h5 class="h5 m-0 p-0">Shopping cart can not be empty !</h5>\n                                                </div>\n                                                <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                                            </div>\n                                        </div>\n            ':"error"==responce.alert&&(shopping_alert.innerHTML='<div class="alert alert-danger mt-2 shadow-sm alert-dismissible fade show border-0" role="alert">\n                                            <div class="my-2">\n                                                <div class="d-flex align-items-center justify-content-center">\n                                                    <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                                                    <h5 class="h5 m-0 p-0">Something was wrong, order was not created</h5>\n                                                </div>\n                                                <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                                            </div>\n                                        </div>\n            ');const storage=JSON.parse(localStorage.getItem("cart"));if(0!=storage.length){storage.map(value=>{context.diamonds_chb.map((chb,index)=>{chb.name==value&&context.diamonds[index].remove()})}),localStorage.setItem("cart",JSON.stringify([]));const len=context.updateInfo(responce);0==len&&(context.container.innerHTML=emptyCart)}else context.cleanInfo(),context.container.innerHTML=emptyCart}msgSubmit(form,url="/cart/send_list/"){form.addEventListener("submit",e=>{e.preventDefault();const button=form.querySelector('button[type="submit"]'),button_text=button.querySelector(".order-btn-text"),button_main_text=button_text.textContent;button_text.textContent="Sending a wish list",button.classList.add("active"),button.setAttribute("disabled",!0);const formData={msg:"",carat:this.total_carat.textContent,stone:this.total_stone.textContent,price:this.total_price.textContent.replace("$","")},input=form.querySelector("textarea");formData.msg=input.value,ajax(url,formData,this.afterMsg,this)})}afterMsg(responce,context){let type="info";"error"==responce.alert&&(type="danger");const alert=`\n            <div class="alert alert-${type} mt-2 shadow-sm alert-dismissible fade show border-0" role="alert">\n                <div class="my-2">\n                    <div class="d-flex align-items-center justify-content-center">\n                        <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                        <h5 class="h5 m-0 p-0">${responce.msg}</h5>\n                    </div>\n                    <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                </div>\n            </div>`,form=context.formMessage,btnClose=form.querySelector(".btn-close");btnClose.click();const button=form.querySelector('button[type="submit"]'),button_text=button.querySelector(".order-btn-text");button_text.textContent="Send your wish list",button.classList.remove("active"),button.removeAttribute("disabled"),context.msg.innerHTML="",context.msg.insertAdjacentHTML("afterbegin",alert)}}document.addEventListener("DOMContentLoaded",()=>{const cart=new Cart({deleteButton:"#delete-selected",container:"#cart-items",formBuy:"#form-buy",formMemo:"#form-memo",formHold:"#form-hold",formMessage:"#form-wish-list",msg:"#cart_msg",total_price:"#total_price",total_carat:"#total_carat",total_stone:"#total_stone",cart_length:"#cart_length"}),diamondItem=new ElementsControl({manager:".result__item-list",managed:".result__drop-down"});diamondItem.toggler({single:!0,notThis:".label-result"});const diamondMoreInfo=new ElementsControl({manager:".btn-more--info",managed:".body-more--info"});diamondMoreInfo.toggler({single:!0});const diamondLabel=new ElementsControl({manager:'[data-io-label="diamonds-item"]',managed:".checkbox-results"});function hoursToggle(){const hours=document.querySelector("#hours-item"),hoursValue=hours.querySelector("#hold-hours--title"),hoursItems=hours.querySelectorAll(".hold-hours__select"),hoursInput=hours.querySelector("#hold-hours--option");hours.addEventListener("click",()=>{hours.classList.toggle("active")}),hoursItems.forEach(elem=>{elem.addEventListener("click",()=>{let value=elem.textContent;hoursValue.textContent=value,hoursInput.value=value})})}diamondLabel.label(cart.checked,cart.unchecked),hoursToggle();const scrollFix=new ScrollFix({container:"#cart-items"}),cartSort=new Sort({cart:cart,viewContainer:"#cart-items",simpleContainer:"#cart_simple_sort",advancedContainer:"#cart-sort-modal",url:"sort/"});cartSort.init()});