"use strict";class Control{constructor(kwargs){}_debug(info=this){return console.log(info),this}_getElement(selector,parent=document){return parent.querySelector(selector)}_getElements(selector,parent=document){return[...parent.querySelectorAll(selector)]}_getChilds(selector,elements=Array){const nodes=[];return elements.map(element=>{const nodeList=[...element.querySelectorAll(selector)];nodeList.map(node=>nodes.push(node))}),nodes}_getElementsList(list,parent){const nodes=[];return list.map(value=>{nodes.push(this._getElement(value,parent))}),nodes}spinerView(action="get",container){if("get"==action){const spin='\n            <div class="text-center text-primary py-4 shadow-sm w-100 bg-lite border-bottom border-top my-1" id="loading-spiner">\n                <div class="spinner-border" role="status">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n            </div>\n            ';return spin}if("remove"==action){null==container&&(container=this.container);const spin=container.querySelector("#loading-spiner");null!=spin&&spin.remove()}else if("has"==action){null==container&&(container=this.container);const spin=container.querySelector("#loading-spiner");return null!=spin}}getDiamondHTML(diamond){parent.innerHTML="";let photo='<img src="/static/img/diamonds/base-diamond.jpg" alt="" class="img-fluid rounded">';const date=deliveryDate(),diamondHTML=`\n        <div class="result__item result-section--element">\n    \n        <ul class="item-list result__item-list">\n            <li class="item-list-element">\n                <i class="item-shape svg-${diamond.fields.shape.toLowerCase()}"></i>\n                <i class="fa fa-video-camera ms-2" aria-hidden="true"></i>\n                <i class="fa fa-chevron-down ms-2" aria-hidden="true"></i>\n            </li>\n            <li class="item-list-element">\n                <div class="checkbox-label label-result" data-io-label="diamonds-item">\n                    <input type="checkbox" name="chb_${diamond.pk}" id="chb_${diamond.pk}" class="d-none checkbox checkbox-results">\n                    <i class="fa fa-check" aria-hidden="true"></i>\n                </div>\n            </li>\n            <li class="item-list-element">\n                <span class="me-2 shape-text-info">Shape:</span>\n                <span>${diamond.fields.shape}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Disc%:</span>\n                <span>${diamond.fields.disc}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Price:</span>\n                <span>$${diamond.fields.sale_price}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Carat:</span>\n                <span>${diamond.fields.weight}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Cut:</span>\n                <span>${diamond.fields.cut}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Color:</span>\n                <span>${diamond.fields.color}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Clarity:</span>\n                <span>${diamond.fields.clarity}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">T%:</span>\n                <span>${diamond.fields.table_procent}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">D%:</span>\n                <span>${diamond.fields.depth_procent}%</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">L/W:</span>\n                <span>${diamond.fields.lw}</span>\n            </li>\n            <li class="item-list-element">\n                <span class="item-list-element--info">Report:</span>\n                <span>${diamond.fields.lab}</span>\n            </li>\n        </ul>\n\n        <div class="result__drop-down border-top">\n            <div class="row">\n                \n                <div class="result__drop-down--col col-3">\n                    ${photo}\n                </div>\n                \n                <div class="result__drop-down--col col-7">\n    \n                    <h4 class="h4 py-2">1.01 Carat Pear Lab Diamond</h4>\n    \n                    <h5 class="h5 py-2">$${diamond.fields.sale_price}</h5>\n    \n                    <ul class="list result__info-list">\n    \n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Carat: ${diamond.fields.weight}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Color: ${diamond.fields.color}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Clarity: ${diamond.fields.clarity}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Cut: ${diamond.fields.cut}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Polish: ${diamond.fields.polish}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Symmetry: ${diamond.fields.symmetry}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Table: ${diamond.fields.table_procent}%</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Depth: ${diamond.fields.depth_procent}%</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>L/W: ${diamond.fields.lw}</span>\n                        </li>\n                        <li class="py-3 border-bottom result__info-li">\n                            <span>Measurements: ${diamond.fields.measurements}</span>\n                        </li>\n                    </ul>\n    \n                    <div class="acordion">\n                        <button type="button" class="acordion__btn btn-more--info">\n                            Additional Details\n                            <i class="fa fa-chevron-down ms-2" aria-hidden="true"></i>\n                        </button>\n                        <div class="acordion__body body-more--info border-top w-100">\n                            <ul class="list result__drop-list">\n                                <li class="result__drop-li">\n                                    <span>Culet: ${diamond.fields.culet}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Girdle: ${diamond.fields.gridle}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Report â„–: ${diamond.fields.cert_number}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Fluour: ${diamond.fields.fluor}</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span>Origin: Lab grown Diamond</span>\n                                </li>\n                                <li class="result__drop-li">\n                                    <span class="d-flex w-100 flex-column">\n                                        <span>Lab Created Diamond Delivery:</span>\n                                        <span class="text-nowrap delivery_date">${date.day} ${date.dayNum} ${date.month}</span>\n                                    </span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n    \n                </div>\n                \n                <div class="result__drop-down--col col-2 d-flex flex-column justify-content-center align-items-center">\n                    <p class="mt-3 w-100 d-flex justify-content-center">\n                        <i class="fa fa-heart me-2 text-primary" aria-hidden="true"></i>\n                        <span>Only One Available</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n        `;return diamondHTML}getEmpty(message){const html=`        \n        <div class="text-center text-primary py-4 border shadow-sm w-100 bg-lite" id="empty-allert">\n            <p class="fs-5 m-0">${message}</p>\n        </div>\n        `;return html}updateView(responce,context){let diamonds;diamonds="comparison"!==context.key?JSON.parse(responce[context.key]):responce;const position=context.insertPosition||"beforeend";void 0!==context.responceReverse&&null!==context.responceReverse&&1==context.responceReverse&&(diamonds=diamonds.reverse()),setTimeout(()=>{context.spinerView("remove",context.container),diamonds.map(diamond=>{context.container.insertAdjacentHTML(position,context.getDiamondHTML(diamond))}),context.updateViewEnd(responce)},200)}}class DataControl{constructor(){this.filter={shape:[],lab:[],strs:{},nums:{}},this.currentKey="all",this.sort={result:["sale_price"],best:["sale_price"],comparison:["sale_price"],compare:{result:!1,best:!1,comparison:!1}},this.comparing=[],this.comparisonSelected=[],this.scrollLock=!1,this.permissions={result:{next:!0,prev:!1},best:{next:!0,prev:!1}},this.ordering={result:[0,45],best:[0,45]},this.requestOrdering={result:[0,45],best:[0,45]},this.maxOrder={result:null,best:null},this.responceReverse=!1}dropInfinity(){this.scrollLock=!0,this.permissions={result:{next:!0,prev:!1},best:{next:!0,prev:!1}},this.ordering={result:[0,45],best:[0,45]},this.requestOrdering={result:[0,45],best:[0,45]},this.maxOrder={result:null,best:null}}}class NoUI extends Control{constructor(kwargs){super(),this.active_size=768,this.active_button=this._getElement("#show_filter_result"),this.filter_exit=this._getElement("#filter-exit-btn"),this.data={shape:[],lab:[],strs:{},nums:{}},this.dataControl=kwargs.dataControl,this.view=kwargs.view,this.url=kwargs.url,this.keys=[],this.parent=this._getElement(kwargs.parent),this.numericElements=this._getElements(kwargs.numericSliders,this.parent),this.strElements=this._getElements(kwargs.stringSliders,this.parent),this.labElements=this._getElements(kwargs.labInputs,this.parent),this.shapeElements=this._getElements(kwargs.shapeInputs,this.parent),this.cleanButton=this._getElement(kwargs.cleanButton,this.parent),this.numericInputs=[],this.sliders=[],this.clean()}getMaxMin(selector){const input=this._getElement(selector),values={max:Number(input.max),min:Number(input.min)};return values}numeric(slider,settings){const key=settings.options.key;this.keys.push(key);const sliderElement=this._getElement(slider),parent=sliderElement.closest(".filter-item"),sliderObj=noUiSlider.create(sliderElement,settings.params);this.sliders.push(sliderObj),this.numericInputs[key]={min:this._getElement('[data-numeric-input="min"]',parent),max:this._getElement('[data-numeric-input="max"]',parent)},sliderObj.on("update",()=>{const value=sliderObj.get();this.numericInputs[key].min.value=value[0],this.numericInputs[key].max.value=value[1];let currentMin=value[0],currentMax=value[1];"sale_price"==key&&(currentMin=currentMin.slice(0,currentMin.length-1),currentMax=currentMax.slice(0,currentMax.length-1));const defaultMin=sliderObj.options.start[0],defaultMax=sliderObj.options.start[1];currentMin==defaultMin&&currentMax==defaultMax?delete this.data.nums[key]:this.data.nums[key]=[currentMin,currentMax]}),this.numericInputs[key].min.addEventListener("change",()=>{sliderObj.set([this.numericInputs[key].min.value,null]),this.apply()}),this.numericInputs[key].max.addEventListener("change",()=>{sliderObj.set([null,this.numericInputs[key].max.value]),this.apply()}),sliderObj.on("change",()=>{this.apply()})}string(slider,settings){const key=settings.options.key;this.keys.push(key);const sliderElement=this._getElement(slider),parent=sliderElement.closest(".filter-item"),sliderObj=noUiSlider.create(sliderElement,settings.params);this.sliders.push(sliderObj);const pips=this._getElements(".noUi-value",parent);pips.map((pip,index)=>{pip.textContent=settings.params.replacePips[index]}),sliderObj.on("change",()=>{const start=sliderObj.get()[0],end=sliderObj.get()[1],names=sliderObj.options.replacePips,current_values=names.filter((name,index)=>{if(index>=start-1&&index<=end-1)return name});this.data.strs[key]=current_values,this.apply()})}select(key){let inputs;"lab"===key?inputs=this.labElements:"shape"===key&&(inputs=this.shapeElements),inputs.map(input=>{input.addEventListener("change",()=>{const value=Number(input.value),checked=input.checked,shape=input.dataset.shape;checked?"shape"==key?this.data[key].push(shape):"lab"==key&&this.data[key].push(input.dataset.labName):checked||("shape"==key?this.data[key]=this.data[key].filter(v=>v!=shape):"lab"==key&&(this.data[key]=this.data[key].filter(v=>v!=input.dataset.labName))),this.apply()})})}clean(){this.cleanButton.addEventListener("click",()=>{this.data={shape:[],lab:[],strs:{},nums:{}},this.sliders.map(slider=>{slider.reset()}),this.shapeElements.map(shape=>{shape.checked=!1}),this.labElements.map(shape=>{shape.checked=!1}),this.apply(),this.cleaner()})}cleaner(){0===Object.keys(this.data.nums).length&&0===Object.keys(this.data.strs).length&&0===this.data.lab.length&&0==this.data.shape.length?(this.cleanButton.classList.add("hidden"),this.cleanButton.setAttribute("disabled","")):(this.cleanButton.classList.remove("hidden"),this.cleanButton.removeAttribute("disabled"))}apply(){this.cleaner(),this.currentKey="all",this.dataControl.currentKey="all",this.dataControl.ordering={result:[0,45],best:[0,45]},this.dataControl.requestOrdering={result:[0,45],best:[0,45]},this.view.result.container.innerHTML="",this.view.result.container.insertAdjacentHTML("afterbegin",this.spinerView("get")),this.view.best.container.innerHTML="",this.view.best.container.insertAdjacentHTML("afterbegin",this.spinerView("get"));for(let key in this.data)this.dataControl.filter[key]=this.data[key];this.dataControl.dropInfinity();const window_size=document.documentElement.getBoundingClientRect().width;window_size>this.active_size?ajax("filtering/",this.dataControl,this.view.updateView,this.view):(this.active_button.classList.add("active"),this.active_button.onclick=()=>{ajax("filtering/",this.dataControl,this.view.updateView,this.view),this.active_button.classList.remove("active"),this.filter_exit.click()})}}class FilterSort extends Control{constructor(kwargs){super(),this.dataControl=kwargs.control,this.viewControl=kwargs.view,this.key=kwargs.key,this.parent=this._getElement(kwargs.parent),this.container=this._getElement(kwargs.container,this.parent),this.simple={container:this._getElement(kwargs.simpleSort)},this.simple.items=this._getElements("[data-io-simple-sort]",this.simple.container),this.advanced={container:this._getElement(kwargs.modal,this.parent)},this.advanced.body=this._getElement(".modal-body",this.advanced.container),this.advanced.selected=this._getElement(kwargs.priorityList,this.advanced.body),this.advanced.unselected=this._getElement(kwargs.sortList,this.advanced.body),this.advanced.items=this._getElements("[data-io-advanced-sort]",this.advanced.body),this.advanced.angle=this._getChilds(".fa-angle-down",this.advanced.items),this.advanced.plus=this._getChilds(".fa-plus",this.advanced.items),this.advanced.handle=this._getChilds(".drag-handle",this.advanced.items),this.sort=[],this.url=kwargs.url,1==kwargs.debug&&this._debug()}init(){this.dragElems=this.advanced.items.filter(item=>{if(item.parentElement==this.advanced.selected)return item}),this.plusEvent(),this.angleEvent(),this.simpleEvent(),this.drag()}plusEvent(){this.advanced.plus.map((plus,i)=>{plus.addEventListener("click",()=>{const element=this.advanced.items[i];element.parentElement==this.advanced.unselected?(element.classList.add("active-2"),this.advanced.selected.insertAdjacentElement("afterbegin",element),this.dragElems.unshift(element)):element.parentElement==this.advanced.selected&&(element.classList.remove("active-1"),element.classList.remove("active-2"),this.advanced.unselected.insertAdjacentElement("afterbegin",element),this.dragElems=this.dragElems.filter(elem=>{if(elem!=element)return elem})),this.dragElems=this._getElements(".modal-sort-item",this.advanced.selected),this.dragEvent(this.dragElems),this.sortUpdate("advanced")})})}angleEvent(){this.advanced.angle.map((angle,i)=>{angle.addEventListener("click",()=>{const element=this.advanced.items[i];element.classList.contains("active-1")?(element.classList.remove("active-1"),element.classList.add("active-2")):element.classList.contains("active-2")&&(element.classList.remove("active-2"),element.classList.add("active-1")),this.sortUpdate("advanced")})})}simpleEvent(){this.simple.items.map(item=>{item.addEventListener("click",()=>{this.simple.items.map(cl=>{cl!==item&&(cl.classList.remove("active-1"),cl.classList.remove("active-2"))}),item.classList.contains("active-1")?(item.classList.remove("active-1"),item.classList.add("active-2")):item.classList.contains("active-2")?(item.classList.remove("active-2"),item.classList.add("active-1")):item.classList.contains("active-1")||item.classList.contains("active-2")||item.classList.add("active-2"),this.updateDragElems(),this.dragEvent(this.dragElems),this.sortUpdate("simple")})})}updateDragElems(){this.advanced.items.map(item=>{this.sort.forEach(value=>{console.log(value),console.log(item.dataset.ioAdvancedSort)})}),this.dragElems=this._getElements("[data-io-advanced-sort]",this.advanced.selected)}drag(){this.dragObject=new Sortable(this.advanced.selected,{animation:200,handle:".drag-handle"})}dragEvent(elements){elements.map(elem=>{elem.ondragend=()=>{this.sortUpdate("advanced")}})}sortUpdate(from){if("advanced"==from){this.sort=[];const selectedValue=[];this.dragElems=this._getElements("[data-io-advanced-sort]",this.advanced.selected),this.dragElems.map(elem=>{let value=elem.dataset.ioAdvancedSort;selectedValue.push(value),elem.classList.contains("active-1")&&(value="-"+value),this.sort.push(value)}),this.simple.items.map(elem=>{elem.classList.remove("active-1"),elem.classList.remove("active-2")}),this.simple.items.map(elem=>{elem.dataset.ioSimpleSort==[selectedValue[0]]&&(this.sort[0]==selectedValue[0]?elem.classList.add("active-1"):elem.classList.add("active-2"))})}else"simple"==from&&this.simple.items.map(item=>{if(item.classList.contains("active-1")||item.classList.contains("active-2")){let value=item.dataset.ioSimpleSort;this.sort=this.sort.filter(v=>{if(v!=value&&v!=`-${value}`)return v}),item.classList.contains("active-1")&&(value="-"+value),this.sort.unshift(value)}});if("compare"==this.sort[0]||"-compare"==this.sort[0]){const compare=this.sort[0];this.dataControl.sort.compare[this.key]=compare,this.sort=this.sort.filter(v=>v!=compare)}else this.dataControl.sort.compare[this.key]=!1;if(this.dataControl.sort[this.key]=this.sort,"comparison"==this.key){const selected=this.view.comparison.selected.map(v=>v.replace("chb_",""));this.dataControl.comparisonSelected=selected}this.container.innerHTML="",this.container.insertAdjacentHTML("afterbegin",this.spinerView("get")),this.dataControl.scrollLock=!0,this.dataControl.dropInfinity(),ajax(this.url,this.dataControl,this.updateView,this)}updateViewEnd(responce){const resultLen=responce.resultResponceLen,bestLen=responce.bestResponceLen;this.viewControl.updateHTMLList(this.key),this.viewControl.selected(),this.viewControl.selecteble(),this.dataControl.maxOrder.result=resultLen,this.dataControl.maxOrder.best=bestLen,this.dataControl.scrollLock=!1}}class Comparison extends Control{constructor(kwargs){super(),this.compKey="comparing",this.dataControl=kwargs.dataControl,this.result={container:this._getElement(kwargs.resultContainer),len:this._getElement("#result-length")},this.result.card=this._getElements(".result__item",this.result.container),this.result.labels=this._getChilds("[data-io-label]",this.result.card),this.result.inputs=this._getChilds('input[type="checkbox"]',this.result.labels),this.best={container:this._getElement(kwargs.bestContainer),len:this._getElement("#best-length")},this.best.card=this._getElements(".result__item",this.best.container),this.best.labels=this._getChilds("[data-io-label]",this.best.card),this.best.inputs=this._getChilds('input[type="checkbox"]',this.best.labels),this.comparison={container:this._getElement(kwargs.comparisonContainer),lenList:this._getElementsList(kwargs.comparisonLen),deleteButton:this._getElement("#comparison-delet-selected"),deleteAllButton:this._getElement("#comparison-delet-all"),shareLink:this._getElement("#share-link"),selected:[]},this.share={container:this._getElement("#share-link-container"),link:this._getElement("#messageBox"),trigger:this._getElement("#share-link-button"),radio:this._getElements('input[name="shareprice"]'),type:this._getElement("#share-type-text")},this.cart={container:this._getElement(kwargs.cartPack),button:this._getElement(kwargs.cartButton),responceTitle:{success:"The stones have been placed in the cart",error:"You haven't chosen a single stone",alert:"Have you already added these stones"}},this.cart.length=this._getElement(kwargs.cartLength,this.cart.container),this.cart.exit=this._getElement(kwargs.cartExit,this.cart.container),this.cart.title=this._getElement(kwargs.cartTitle,this.cart.container)}init(){null!=localStorage.getItem(this.compKey)&&null!=localStorage.getItem(this.compKey)||localStorage.setItem(this.compKey,JSON.stringify([])),this.comparing=JSON.parse(localStorage.getItem(this.compKey)),this.selecteble(),this.selected(),this.comparisonDelete(),this.comparisonDeleteAll(),this.shareLink(),this.upgrade(this.result.card),this.upgrade(this.best.card),this.cartPack()}selecteble(){const resultLabelEvent=new ElementsControl({manager:this.result.labels,managed:this.result.inputs}).label(value=>{const storage=JSON.parse(localStorage.getItem(this.compKey));storage.push(value),this.comparing=[...new Set(storage)],localStorage.setItem(this.compKey,JSON.stringify(this.comparing)),this.selected()},value=>{const storage=JSON.parse(localStorage.getItem(this.compKey));this.comparing=storage.filter(v=>v!=value),localStorage.setItem(this.compKey,JSON.stringify(this.comparing)),this.selected()}),bestLabelEvent=new ElementsControl({manager:this.best.labels,managed:this.best.inputs}).label(value=>{const storage=JSON.parse(localStorage.getItem(this.compKey));storage.push(value),this.comparing=[...new Set(storage)],localStorage.setItem(this.compKey,JSON.stringify(this.comparing)),this.selected()},value=>{const storage=JSON.parse(localStorage.getItem(this.compKey));this.comparing=storage.filter(v=>v!=value),localStorage.setItem(this.compKey,JSON.stringify(this.comparing)),this.selected()})}selected(){const inputs=[...this.result.inputs,...this.best.inputs];inputs.map(input=>{input.checked=!1,input.parentElement.classList.remove("active")}),inputs.map(input=>{this.comparing.map(value=>{input.name==value&&(input.checked=!0,input.parentElement.classList.add("active"))})}),this.comparison.lenList.map(item=>{item.textContent=`(${this.comparing.length})`}),this.dataControl.comparing=this.comparing.map(value=>value.replace("chb_","")),ajax("filtering/of/key/",this.dataControl,this.comparisonView,this)}updateHTMLList(key){"comparison"==key?(this.comparison.card=this._getElements(".result__item",this.comparison.container),this.comparison.labels=this._getChilds("[data-io-label]",this.comparison.card),this.comparison.inputs=this._getChilds('input[type="checkbox"]',this.comparison.labels),this.upgrade(this.comparison.card)):"result"==key?(this.result.card=this._getElements(".result__item",this.result.container),this.result.labels=this._getChilds("[data-io-label]",this.result.card),this.result.inputs=this._getChilds('input[type="checkbox"]',this.result.labels),this.upgrade(this.result.card)):"best"==key&&(this.best.card=this._getElements(".result__item",this.best.container),this.best.labels=this._getChilds("[data-io-label]",this.best.card),this.best.inputs=this._getChilds('input[type="checkbox"]',this.best.labels),this.upgrade(this.best.card))}comparisonView(diamonds,context){const emptyComp=context.getEmpty("Comparison list is empty");if(0!=diamonds.length)context.comparison.container.innerHTML="",diamonds.map(diamond=>{context.comparison.container.insertAdjacentHTML("beforeend",context.getDiamondHTML(diamond))}),context.updateHTMLList("comparison"),context.comparisonSelected(),context.comparisonSelecteble();else{const empty=context._getElement("#empty-allert",context.comparison.container);null!=empty&&null!=empty||(context.comparison.innerHTML="",context.comparison.container.insertAdjacentHTML("afterbegin",emptyComp))}}comparisonSelecteble(){const comparisonLabelEvent=new ElementsControl({manager:this.comparison.labels,managed:this.comparison.inputs}).label(value=>{this.comparison.selected.push(value),this.comparison.inputs.map(input=>{input.name==value&&(input.checked,input.parentElement.classList.add("active"))})},value=>{this.comparison.selected=this.comparison.selected.filter(v=>v!=value),this.comparison.inputs.map(input=>{input.name==value&&(input.checked,input.parentElement.classList.remove("active"))})})}comparisonSelected(){const inputs=this.comparison.inputs;inputs.map(input=>{input.checked=!1,input.parentElement.classList.remove("active")}),inputs.map(input=>{this.comparison.selected.map(value=>{input.name==value&&(input.checked=!0,input.parentElement.classList.add("active"))})})}comparisonDelete(){this.comparison.deleteButton.addEventListener("click",()=>{0!=this.comparison.selected.length&&(this.comparison.selected.map(value=>{this.comparison.inputs.map((input,index)=>{input.name==value&&(this.comparison.selected=this.comparison.selected.filter(v=>v!=value),this.comparing=this.comparing.filter(v=>v!=value),localStorage.setItem(this.compKey,JSON.stringify(this.comparing)),this.comparison.card[index].remove())})}),this.updateHTMLList("comparison"),this.selected())})}comparisonDeleteAll(){this.comparison.deleteAllButton.addEventListener("click",()=>{this.comparison.selected=[],localStorage.setItem(this.compKey,JSON.stringify([])),this.comparing=[],this.comparison.card.map(item=>{item.remove()}),this.updateHTMLList("comparison"),this.selected()})}shareLink(){this.share.trigger.addEventListener("click",()=>{this.share.data={share:"0",comparing:this.dataControl.comparing},this.share.data.comparing.length>0?(this.share.radio.map(inp=>{inp.checked&&(this.share.data.share=inp.value)}),ajax("/share/create/",this.share.data,(responce,context)=>{context.share.container.classList.add("active"),context.share.link.textContent=responce.share_link,"0"==context.share.data.share?context.share.type.innerHTML='Your link to the list of products <span class="text-success">without price</span> <br> was created and copied':"1"==context.share.data.share&&(context.share.type.innerHTML='Your link to the list of products <span class="text-success">with price</span> <br> was created and copied');const data=[new ClipboardItem({"text/plain":new Blob([responce.share_link],{type:"text/plain"})})];navigator.clipboard.write(data).then((function(){}),(function(){console.error("Unable to write to clipboard. :-(")}))},this)):(this.share.container.classList.add("active"),this.share.type.innerHTML="First select the products you want to share",this.share.link.innerHTML="--")})}upgrade(cards){const drop1=new ElementsControl({manager:this._getChilds(".result__item-list",cards),managed:this._getChilds(".result__drop-down",cards)}),drop2=new ElementsControl({manager:this._getChilds(".acordion__btn",cards),managed:this._getChilds(".acordion__body",cards)});drop1.toggler({notThis:this._getChilds("[data-io-label]",cards)}),drop2.toggler()}updateView(responce,context){const resultDiamonds=JSON.parse(responce.result),bestDiamonds=JSON.parse(responce.best),resultLen=responce.resultResponceLen,bestLen=responce.bestResponceLen;0!==resultDiamonds.length?setTimeout(()=>{context.spinerView("remove",context.result.container),context.result.len.textContent=`(${resultLen})`,resultDiamonds.map(diamond=>{context.result.container.insertAdjacentHTML("beforeend",context.getDiamondHTML(diamond))}),context.updateHTMLList("result"),context.selecteble(),context.selected()},200):(context.result.len.textContent=`(${resultLen})`,context.result.container.innerHTML="",context.result.container.insertAdjacentHTML("beforeend",context.getEmpty("Nothing was found for your query"))),0!==bestDiamonds.length?setTimeout(()=>{context.spinerView("remove",context.best.container),context.best.len.textContent=`(${bestLen})`,bestDiamonds.map(diamond=>{context.best.container.insertAdjacentHTML("beforeend",context.getDiamondHTML(diamond))}),context.updateHTMLList("best")},200):(context.best.len.textContent=`(${bestLen})`,context.best.container.innerHTML="",context.best.container.insertAdjacentHTML("beforeend",context.getEmpty("Nothing was found for your query"))),0===resultLen&&0===bestLen||setTimeout(()=>{context.selecteble(),context.selected(),context.dataControl.scrollLock=!1,context.dataControl.maxOrder.result=resultLen,context.dataControl.maxOrder.best=bestLen},210)}cartPack(){this.cart.exit.addEventListener("click",()=>{this.cart.container.classList.remove("active"),this.cart.title.classList.remove("text-danger"),this.cart.title.classList.remove("text-succes"),this.cart.title.classList.remove("text-alert")}),this.cart.button.addEventListener("click",()=>{if(this.cart.container.classList.add("active"),0!=this.comparing.length){const forRequest=this.comparing.map(item=>item.replace("chb_",""));ajax("/cart/pack/",forRequest,this.cartResponce,this)}else this.cart.title.textContent=this.cart.responceTitle.error,this.cart.title.classList.remove("text-succes"),this.cart.title.classList.remove("text-alert"),this.cart.title.classList.add("text-danger")})}cartResponce(responce,context){context.cart.length.textContent=responce.update_len,0==responce.update_len?(context.cart.title.textContent=context.cart.responceTitle.alert,context.cart.title.classList.remove("text-danger"),context.cart.title.classList.remove("text-success"),context.cart.title.classList.add("text-alert")):(context.cart.title.textContent=context.cart.responceTitle.success,context.cart.title.classList.remove("text-danger"),context.cart.title.classList.remove("text-alert"),context.cart.title.classList.add("text-success")),context.comparison.selected=[],localStorage.setItem(context.compKey,JSON.stringify([])),context.comparing=[],context.comparison.card.map(item=>{item.remove()}),context.updateHTMLList("comparison"),context.selected()}}class InfinityScroll extends Control{constructor(kwargs){super(),this.step=15,this.stop=!1,this.key=kwargs.key,this.dataControl=kwargs.dataControl,this.viewControl=kwargs.viewControl,this.container=this._getElement(kwargs.container),1==kwargs.debug&&this._debug()}permission(direction){this.direction=direction;let verdict=!1;const start=this.dataControl.ordering[this.key][0],end=this.dataControl.ordering[this.key][1];return this.dataControl.scrollLock||(this.dataControl.scrollLock=!0,"next"==this.direction&&!0===this.dataControl.permissions[this.key].next?(null==this.dataControl.maxOrder[this.key]||this.dataControl.maxOrder[this.key]>end)&&(verdict=!0):"prev"==this.direction&&!0===this.dataControl.permissions[this.key].prev?start>0?verdict=!0:this.dataControl.permissions[this.key].prev=!1:verdict=!1,0==verdict&&(this.dataControl.scrollLock=!1)),verdict}next(){if(this.permission("next")&&!this.stop){this.stop=!0;const start=this.dataControl.ordering[this.key][0],end=this.dataControl.ordering[this.key][1],maxOrder=this.dataControl.maxOrder[this.key];null!=maxOrder&&end+this.step>maxOrder?(this.step=end+this.step-maxOrder,this.dataControl.permissions[this.key].next=!1):null!=maxOrder&&end+this.step==maxOrder&&(this.dataControl.permissions[this.key].next=!1),this.dataControl.requestOrdering[this.key]=[end,end+this.step],this.dataControl.ordering[this.key]=[start+this.step,end+this.step],this.dataControl.permissions[this.key].prev=!0,this.preparing()}}prev(){if(this.permission("prev")){this.step=15;const start=this.dataControl.ordering[this.key][0],end=this.dataControl.ordering[this.key][1];if(start-this.step<0){const num=-1*(start-this.step);this.step=this.step-num,this.dataControl.permissions[this.key].prev=!1}else start-this.step==0&&(this.dataControl.permissions[this.key].prev=!1);this.dataControl.requestOrdering[this.key]=[start-this.step,start],this.dataControl.ordering[this.key]=[start-this.step,end-this.step],this.dataControl.permissions[this.key].next=!0,this.preparing()}}preparing(){if("next"==this.direction?this.insertPosition="beforeend":"prev"==this.direction&&(this.insertPosition="afterbegin"),"next"==this.direction){this.container.insertAdjacentHTML(this.insertPosition,this.spinerView("get"));let last=this._getElements(".result__item",this.container);last=last[last.length-1],last.scrollIntoView({block:"end"})}else if("prev"==this.direction){this.container.insertAdjacentHTML(this.insertPosition,this.spinerView("get"));let first=this._getElements(".result__item",this.container);first=first[0],first.scrollIntoView({block:"start"})}this.request()}request(){"prev"==this.direction&&(this.responceReverse=!0),ajax("filtering/",this.dataControl,this.updateView,this)}updateViewEnd(responce){const diamonds=JSON.parse(responce[this.key]);0==diamonds.length&&("next"==this.direction?this.dataControl.permissions[this.key].next=!1:"prev"==this.direction&&(this.dataControl.permissions[this.key].prev=!1)),this.dataControl.maxOrder[this.key]=responce[`${this.key}ResponceLen`],this.step=JSON.parse(responce[this.key]).length,this.elements=this._getElements(".result__item",this.container),"next"==this.direction?(this.elements.map((elem,i)=>{i<this.step&&elem.remove()}),this.elements=this.elements.filter((elem,i)=>{if(i>=this.step)return elem}),this.viewControl.updateHTMLList(this.key),this.viewControl.selecteble(),this.viewControl.selected(),this.dataControl.scrollLock=!1):"prev"==this.direction&&(this.elements.map((elem,i)=>{i>=this.elements.length-this.step&&elem.remove()}),this.elements=this.elements.filter((elem,i)=>{if(i<this.elements.length-this.step)return elem}),this.viewControl.updateHTMLList(this.key),this.viewControl.selecteble(),this.viewControl.selected(),this.dataControl.scrollLock=!1,this.responceReverse=!1),this.step=15,this.stop=!1}}document.addEventListener("DOMContentLoaded",()=>{const dataControl=new DataControl({}),comparison=new Comparison({dataControl:dataControl,resultContainer:"#result__items",bestContainer:"#best__items",comparisonContainer:"#comparison__items",comparisonLen:["#comparison-lenth","#add-to-cart-lenght"],cartPack:"#cart-pack",cartButton:"#add-to-cart-selected-diamonds",cartLength:"#cart-pack-length",cartExit:"#cart-pack-exit",cartTitle:"#cart-pack-title"});function filterNoUI(){const noUIKwargs={parent:".diamonds-filter-container",numericSliders:'[data-slider-type="numeric"]',stringSliders:'[data-slider-type="string"]',shapeInputs:'[data-slider-type="shape"]',labInputs:'[data-slider-type="lab"]',cleanButton:"#reset-filter",dataControl:dataControl,view:comparison,url:"filtering/"},noUI=new NoUI(noUIKwargs),price_values=noUI.getMaxMin("#range_price"),priceNoUI=noUI.numeric('[data-slider="price"]',{params:{start:[price_values.min,price_values.max],connect:!0,step:1,tooltips:!0,range:{min:price_values.min,max:price_values.max},format:{to:function(value){return parseInt(value)+"$"},from:function(value){return parseInt(value)}}},options:{key:"sale_price"}}),carat_values=noUI.getMaxMin("#range_carat"),caratNoUI=noUI.numeric('[data-slider="carat"]',{params:{start:[carat_values.min,carat_values.max],connect:!0,step:.01,tooltips:!0,range:{min:carat_values.min,max:carat_values.max}},options:{key:"weight"}}),lw_values=noUI.getMaxMin("#range_lw"),lwNoUI=noUI.numeric('[data-slider="lw"]',{params:{start:[lw_values.min,lw_values.max],connect:!0,step:.01,tooltips:!0,range:{min:lw_values.min,max:lw_values.max}},options:{key:"lw"}}),table_values=noUI.getMaxMin("#range_table"),tableNoUI=noUI.numeric('[data-slider="table"]',{params:{start:[table_values.min,table_values.max],connect:!0,step:.01,tooltips:!0,range:{min:table_values.min,max:table_values.max}},options:{key:"table_procent"}}),length_values=noUI.getMaxMin("#range_length_mm"),lengthNoUI=noUI.numeric('[data-slider="length"]',{params:{start:[length_values.min,length_values.max],connect:!0,step:.01,tooltips:!0,range:{min:length_values.min,max:length_values.max}},options:{key:"length_mm"}}),dapth_values=noUI.getMaxMin("#range_depth"),dapthNoUI=noUI.numeric('[data-slider="depth"]',{params:{start:[dapth_values.min,dapth_values.max],connect:!0,step:.01,tooltips:!0,range:{min:dapth_values.min,max:dapth_values.max}},options:{key:"depth"}}),depth_procent__values=noUI.getMaxMin("#range_depth_procent"),dapth_procent_NoUI=noUI.numeric('[data-slider="depth_procent"]',{params:{start:[depth_procent__values.min,depth_procent__values.max],connect:!0,step:.01,tooltips:!0,range:{min:depth_procent__values.min,max:depth_procent__values.max}},options:{key:"depth_procent"}}),width_values=noUI.getMaxMin("#range_width"),widthNoUI=noUI.numeric('[data-slider="width"]',{params:{start:[width_values.min,width_values.max],connect:!0,step:.01,tooltips:!0,range:{min:width_values.min,max:width_values.max}},options:{key:"width"}}),cutNoUI=noUI.string('[data-slider="cut"]',{params:{start:[1,5],connect:!0,step:1,range:{min:1,max:5},pips:{mode:"positions",values:[1,25,50,75,96],density:1,steped:!0},replacePips:["Fair","Good","Very Good","Excellent","Ideal"]},options:{key:"cut"}}),colorNoUI=noUI.string('[data-slider="color"]',{params:{start:[1,10],connect:!0,step:1,range:{min:1,max:10},pips:{mode:"count",values:10,density:1},replacePips:["M","L","K","J","I","H","G","F","E","D"]},options:{key:"color"}}),clarityNoUI=noUI.string('[data-slider="clarity"]',{params:{start:[1,10],connect:!0,step:1,range:{min:1,max:10},pips:{mode:"count",values:10,density:1},replacePips:["I2","I1","SI2","SI1","VS2","VS1","VVS2","VVS1","IF","FI"]},options:{key:"clarity"}}),polishNoUI=noUI.string('[data-slider="polish"]',{params:{start:[1,3],connect:!0,step:1,range:{min:1,max:3},pips:{mode:"count",values:3,density:1},replacePips:["Good","Very Good","Excellent"]},options:{key:"polish"}}),symmetryNoUI=noUI.string('[data-slider="symmetry"]',{params:{start:[1,3],connect:!0,step:1,range:{min:1,max:3},pips:{mode:"count",values:3,density:1},replacePips:["Good","Very Good","Excellent"]},options:{key:"symmetry"}}),fluourNoUI=noUI.string('[data-slider="fluour"]',{params:{start:[1,5],connect:!0,step:1,range:{min:1,max:5},pips:{mode:"count",values:5,density:1},replacePips:["None","Faint","Medium","Strong","Very Strong"]},options:{key:"fluor"}}),shapeNoUI=noUI.select("shape"),labNoUI=noUI.select("lab")}function filterDynamic(){const filterMore=new ElementsControl({manager:"#filter-more-btn",managed:"#filter-2"});filterMore.toggler();const filterMoreMob=new ElementsControl({manager:"#filters-container-toggler",managed:"#filters-container"});filterMoreMob.screen(()=>{filterMoreMob.toggler()});const filterMoreMobEX=new ElementsControl({manager:"#filter-exit-btn",managed:"#filters-container"});filterMoreMobEX.screen(()=>{filterMoreMobEX.toggler()});const shapeJump=new ElementsControl({manager:"#filter-shape",managed:"#shape-jump-container"});shapeJump.screen(()=>{shapeJump.jump("beforeend")});const filterMobItems=new ElementsControl({manager:".filter-info",managed:".filter-item"});filterMobItems.screen(()=>{filterMobItems.toggler()});const filterMobSwitche=new ElementsControl({manager:"#filter-advenced-btn",managed:"[data-filter-switch]"});filterMobSwitche.screen(()=>{filterMobSwitche.switcher()});const shareModal=new ElementsControl({manager:"#share-link",managed:"#share-link-modal"});shareModal.toggler();const shareModalClose=new ElementsControl({manager:"#share-modal-close",managed:"#share-link-modal"});shareModalClose.toggler()}function scrollEvents(){const resultInfinity=new InfinityScroll({key:"result",container:"#result__items",dataControl:dataControl,viewControl:comparison}),bestInfinity=new InfinityScroll({key:"best",container:"#best__items",dataControl:dataControl,viewControl:comparison}),resutlScroll=new ScrollFix({container:"#result__items",extensionBottom:()=>{resultInfinity.next()},extensionTop:()=>{resultInfinity.prev()}}),bestlScroll=new ScrollFix({container:"#best__items",extensionBottom:()=>{bestInfinity.next()},extensionTop:()=>{bestInfinity.prev()}}),comparisonlScroll=new ScrollFix({container:"#comparison__items"})}comparison.init(),filterNoUI(),filterDynamic(),scrollEvents();const sortResult=new FilterSort({parent:"#pills-result",container:"#result__items",key:"result",control:dataControl,view:comparison,simpleSort:"#result-simple-sort",modal:"#result-name--modal",priorityList:"#result-name-priority",sortList:"#result-name-sort",url:"filtering/"}).init(),sortBest=new FilterSort({parent:"#pills-best",container:"#best__items",key:"best",control:dataControl,view:comparison,simpleSort:"#best-simple-sort",modal:"#best-name--modal",priorityList:"#best-name-priority",sortList:"#best-name-sort",url:"filtering/"}).init(),sortComparison=new FilterSort({parent:"#pills-comparison",container:"#comparison__items",key:"comparison",control:dataControl,view:comparison,simpleSort:"#comparison-simple-sort",modal:"#comparison-name--modal",priorityList:"#comparison-name-priority",sortList:"#comparison-name-sort",url:"filtering/of/key/"}).init();function setDate(){const date=deliveryDate(),elements=[...document.querySelectorAll(".delivery_date")];elements.map(element=>{element.textContent=`${date.day} ${date.dayNum} ${date.month}`})}setDate()});