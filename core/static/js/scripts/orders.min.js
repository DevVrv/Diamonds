"use strict";class Orders{constructor(kwargs){this.kwargs=kwargs,this.valuesLists={clarityList:["I3","I2","I1","SI2","SI1","VS2","VS1","VVS2","VVS1","IF","FI"],cutList:["N/A","Fair","Good","Very Good","Ideal","Super Ideal","Excellent"],colorList:["M","L","K","J","I","H","G","F","E","D"],shapeList:["Round","Marquise","Asscher","Cushion","Emerald","Heart","Oval","Pear","Princess","Radiant","Another"],symmetryList:["N/A","Good","Very Good","Excellent"],polishList:["N/A","Good","Very Good","Excellent"],fluourList:["None","Faint","Medium","Strong","Very Strong"],labList:["IGI","GIA","GCAl","HDR"],status_list:["Rejected","On verification","Order accepted","Delivery is in progress","Delivered","Completed"],type_list:["COD","Invocie","Cash Memo","Memo","Hold"]},this.request={},this.searchForm=this.getElement(kwargs.search),this.searchBody=this.getElement(kwargs.searchBody),this.searchTriger=this.getElement(kwargs.searchTriger),this.ordersContainer=this.getElement(kwargs.ordersContainer),this.orders={orders:this.getElemetns(kwargs.orders,this.ordersContainer),orderStatus:this.getElemetns(kwargs.orderStatus,this.ordersContainer),orderType:this.getElemetns(kwargs.orderType,this.ordersContainer),orderPlaced:this.getElemetns(kwargs.orderPlaced,this.ordersContainer),orderLen:this.getElemetns(kwargs.orderLen,this.ordersContainer),orderCarat:this.getElemetns(kwargs.orderCarat,this.ordersContainer),orderPrice:this.getElemetns(kwargs.orderPrice,this.ordersContainer),orderNumber:this.getElemetns(kwargs.orderNumber,this.ordersContainer),orderDetails:this.getElemetns(kwargs.orderDetails,this.ordersContainer),orderInvoice:this.getElemetns(kwargs.orderInvoice,this.ordersContainer)},this.modalDetails=this.getElement(kwargs.modalDetails),this.modalDetailsItems={close:this.getElement(kwargs.closeModal,this.modalDetails),type:this.getElement(kwargs.modalType,this.modalDetails),number:this.getElement(kwargs.modalNumber,this.modalDetails),status:this.getElement(kwargs.modalStatus,this.modalDetails),placed:this.getElement(kwargs.modalPlaced,this.modalDetails),len:this.getElement(kwargs.modalLen,this.modalDetails),carat:this.getElement(kwargs.modalCarat,this.modalDetails),price:this.getElement(kwargs.modalPrice,this.modalDetails),content:this.getElement(kwargs.modalContent,this.modalDetails)},this.modalInvoice=this.getElement(kwargs.modalInvoice),this.modalInvoiceItems={close:this.getElement(kwargs.closeModal,this.modalInvoice),buyer:this.getElement(kwargs.modalBuyer,this.modalInvoice),attn:this.getElement(kwargs.modalAttn,this.modalInvoice),address:this.getElement(kwargs.modalAddress,this.modalInvoice),tel:this.getElement(kwargs.modalTel,this.modalInvoice),price:this.getElement(kwargs.modalPrice,this.modalInvoice),content:this.getElement(kwargs.modalContent,this.modalInvoice)},this.key="details",this.alert_container=document.querySelector(".alert_block"),this.init()}init(){this.closeModal(this.modalDetailsItems.close,this.modalDetails),this.closeModal(this.modalInvoiceItems.close,this.modalInvoice),this.makeRequest(this.orders.orderDetails,this.modalDetails),this.makeRequest(this.orders.orderInvoice,this.modalInvoice),this.search("search/"),this.searchShow(),this.removeOrder(),this.dateValidation()}debug(info=this){return this}getElement(selector,parent=document){return parent.querySelector(selector)}getElemetns(selector,parent=document){return[...parent.querySelectorAll(selector)]}closeModal(trigger,modal){trigger.onclick=()=>{modal.classList.remove("active")}}spiner(action="get"){if("get"==action){const spin='            \n            <div class="text-center text-primary py-4 shadow-sm w-100 bg-lite border-bottom" id="loading-spiner">\n                <div class="spinner-border" role="status">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n            </div>\n            ';return spin}if("remove"==action){const spin=this.container.querySelector("#loading-spiner");null!=spin&&spin.remove()}else if("has"==action){const spin=this.container.querySelector("#loading-spiner");return null!=spin}}getOrderHTML(order,date,i){let alert="text-success";"0"==order.fields.order_status?alert="text-danger":"1"==order.fields.order_status&&(alert="text-alert");const orderHTML=`\n            <div class="orders__item shadow-sm border" data-orders-item="${order.fields.order_number}">\n            <div class="orders__item-header py-3 px-3">\n                <ul class="orders__item-header-list m-0">\n                    <li class="orders__item-header-element pe-4">\n                        <span class="text-capitalize fs-5 text-primary" data-order-type="${this.valuesLists.type_list[order.fields.order_type]}">${this.valuesLists.type_list[order.fields.order_type]}</span>\n                    </li>\n                    <li class="orders__item-header-element orders__item--date">\n                        <span class="text-uppercase">Order Placed</span>\n                        <span class="orders__item--value" data-order-placed="${date[i]}">${date[i]}</span>\n                    </li>\n                    <li class="orders__item-header-element">\n                        <span class="text-uppercase">Total Diamonds:</span>\n                        <span class="orders__item--value" data-order-diamonds="${order.fields.total_diamonds}">${order.fields.total_diamonds}</span>\n                    </li>\n                    <li class="orders__item-header-element">\n                        <span class="text-uppercase">Total Carat:</span>\n                        <span class="orders__item--value" data-order-carat="${order.fields.total_carat}">${order.fields.total_carat}</span>\n                    </li>\n                    <li class="orders__item-header-element">\n                        <span class="text-uppercase">Total Price:</span>\n                        <span class="orders__item--value">$<span data-order-price="${order.fields.total_price}">${order.fields.total_price}</span></span>\n                    </li>\n                </ul>\n                \n                <div class="orders__item-header-number">\n\n                    <div class="d-flex">\n                        <span class="text-uppercase">Order Number #</span>\n                        <span class="text-capitalize" data-order-number="${order.fields.order_number}">${order.fields.order_number}</span>\n                    </div>\n                    \n                    <div class="d-flex mt-2 orders__header-buttons">\n                        <button type="button" class="link bg-none fs-5 me-3" data-view-details="order_details">View order details</button>\n                        <button type="button" class="link bg-none fs-5" data-view-invoice="view_invoice">View invoice</button>\n                    </div>\n                </div>\n            </div>\n            <div class="orders__item-footer py-3 px-3 border-top">\n                <span class="fs-5 d-block ${alert}"> Status: ${this.valuesLists.status_list[order.fields.order_status]}</span>\n            </div>\n        </div>\n        `;return orderHTML}makeRequest(triggers,modal,url="details/"){triggers.map((trigger,i)=>{trigger.onclick=()=>{let modalItems;modal==this.modalDetails?(this.key="details",modalItems=this.modalDetailsItems):modal==this.modalInvoice&&(this.key="invoice",modalItems=this.modalInvoiceItems);const number=this.orders.orders[i].dataset.ordersItem;modal.classList.add("active"),this.request.number=number,modalItems.content.innerHTML="",modalItems.content.insertAdjacentHTML("afterbegin",this.spiner("get")),ajax(url,this.request,this.makeResponce,this)}})}makeResponce(responce,context){const diamonds=JSON.parse(responce.diamonds);let modal,modalItems;"details"==context.key?(modal=context.modalDetails,modalItems=context.modalDetailsItems,modalItems.type.textContent=context.valuesLists.type_list[responce.type],modalItems.len.textContent=responce.len,modalItems.carat.textContent=responce.carat,modalItems.price.textContent=responce.price,modalItems.status.textContent=context.valuesLists.status_list[responce.status],modalItems.number.textContent=`#${responce.number}`,modalItems.placed.textContent=responce.placed,"0"==responce.status?(modalItems.status.classList.remove("text-success"),modalItems.status.classList.remove("text-alert"),modalItems.status.classList.add("text-danger")):"1"==responce.status?(modalItems.status.classList.remove("text-success"),modalItems.status.classList.remove("text-danger"),modalItems.status.classList.add("text-alert")):(modalItems.status.classList.remove("text-danger"),modalItems.status.classList.remove("text-alert"),modalItems.status.classList.add("text-success"))):"invoice"==context.key&&(modal=context.modalInvoice,modalItems=context.modalInvoiceItems,modalItems.buyer.textContent=`${responce.last_name} ${responce.first_name}`,modalItems.attn.textContent=`${responce.last_name} ${responce.first_name}`,modalItems.address.textContent=responce.address,modalItems.tel.textContent=responce.tel,modalItems.price.textContent=responce.price),modalItems.content.innerHTML="",diamonds.map(diamond=>{modalItems.content.insertAdjacentHTML("beforeend",getDiamondHTML(diamond))})}searchShow(){this.searchTriger.addEventListener("click",()=>{this.searchBody.classList.toggle("active")})}search(url="search/"){this.searchForm.addEventListener("submit",e=>{e.preventDefault();const inputs=this.getElemetns("input",this.searchForm),fields={};inputs.map(input=>{const name=input.name;fields[name]=input.value});let search_number="";if(fields.search.length<10){let num=10-fields.search.length;for(let i=0;i<num;i++)search_number+="0";fields.search=`${search_number}${fields.search}`}this.ordersContainer.innerHTML="",this.ordersContainer.insertAdjacentHTML("afterbegin",this.spiner("get")),ajax(url,fields,this.searchResponce,this)})}searchResponce(responce,context){const orders=JSON.parse(responce.orders),date=responce.date;if(context.ordersContainer.innerHTML="",0!=orders.length)orders.map((order,i)=>{context.ordersContainer.insertAdjacentHTML("beforeend",context.getOrderHTML(order,date,i))});else{const empty='\n            <div class="alert alert-warning mt-2 shadow-sm alert-dismissible fade show border-0 w-100" role="alert">\n                <div class="my-2">\n                    <div class="d-flex align-items-center justify-content-center">\n                        <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                        <h5 class="h5 m-0 p-0">No orders were found for your request</h5>\n                    </div>\n                </div>\n            </div>';context.ordersContainer.insertAdjacentHTML("beforeend",empty)}context.orders.orderDetails=context.getElemetns(context.kwargs.orderDetails,context.ordersContainer),context.orders.orderInvoice=context.getElemetns(context.kwargs.orderInvoice,context.ordersContainer),context.makeRequest(context.orders.orderDetails,context.modalDetails),context.makeRequest(context.orders.orderInvoice,context.modalInvoice)}removeOrder(){const remove=[...document.querySelectorAll(".remove-order")];remove.map(btn=>{btn.addEventListener("click",()=>{const number=btn.dataset.orderNumber,backdrop=document.querySelector(".modal-backdrop");backdrop.remove(),ajax("/orders/remove/",number,this.afterRemoveOrder,this)})})}afterRemoveOrder(responce,context){const order=document.querySelector(`[data-orders-item="${responce.number}"]`);order.remove();const alert=`\n            <div class="alert alert-warning mt-2 shadow-sm alert-dismissible fade show border-0" role="alert">\n                <div class="my-2">\n                    <div class="d-flex align-items-center justify-content-center">\n                        <i class="fa fa-exclamation-circle me-2 fs-5" aria-hidden="true"></i>\n                        <h5 class="h5 m-0 p-0">Order #${responce.number} was removed.</h5>\n                    </div>\n                    <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                </div>\n            </div>`;context.alert_container.innerHTML=alert,document.documentElement.scrollTo({top:0})}dateValidation(){this.dateInputs=[...this.searchForm.querySelectorAll('input[type="date"]')],this.dateInputs.map(input=>{input.addEventListener("input",()=>{if(input.value.length>10){let value=input.value;value=value.slice(value.length-10,value.length),input.value=value}})})}}const orders=new Orders({ordersContainer:"#orders_items",orders:"[data-orders-item]",orderStatus:"[data-order-status]",orderType:"[data-order-type]",orderPlaced:"[data-order-placed]",orderLen:"[data-order-diamonds]",orderCarat:"[data-order-carat]",orderPrice:"[data-order-price]",orderNumber:"[data-order-number]",orderDetails:"[data-view-details]",orderInvoice:"[data-view-invoice]",modalDetails:"#order_details_modal",modalInvoice:"#order_invoice_modal",closeModal:"[data-modal-close]",modalType:"[data-modal-type]",modalStatus:"[data-modal-status]",modalPlaced:"[data-modal-placed]",modalLen:"[data-modal-len]",modalCarat:"[data-modal-carat]",modalPrice:"[data-modal-price]",modalContent:"[data-modal-content]",modalNumber:"[data-modal-number]",modalBuyer:"[data-modal-buyer]",modalAddress:"[data-modal-address]",modalAttn:"[data-modal-attn]",modalTel:"[data-modal-tel]",search:"#orders_search_form",searchBody:"#orders-search-body",searchTriger:"#orders-search-btn"});