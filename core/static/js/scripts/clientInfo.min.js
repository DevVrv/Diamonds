"use strict";class UserFormControl{constructor(kwargs){this.kwargs=kwargs,this.form=this._getElem(kwargs.form),this.inputs=this._getElems(kwargs.inputs,this.form),this.labels=this._getElems(kwargs.labels,this.form),this.buttons=this._getElems(kwargs.buttons,this.form),this.edit=this._getElem(kwargs.edit,this.form),this.password=this._getElem(kwargs.password),this.editEvent(),this.valid()}debug(info=this){return console.log(info),this}_getElem(selector,parent=document){const elem=parent.querySelector(selector);return elem}_getElems(selector,parent=document){const elems=[...parent.querySelectorAll(selector)];return elems}editEvent(){this.edit.onclick=()=>{"show"!==this.edit.dataset.edit?(this.inputs.map(input=>{input.removeAttribute("disabled")}),this.labels.map(label=>{label.classList.add("active")}),this.buttons.map(btn=>{btn.removeAttribute("disabled"),btn.classList.add("active")}),this.password.removeAttribute("disabled"),this.password.classList.add("active"),this.edit.dataset.edit="show",this.edit.textContent="Stop edit"):"hide"!==this.edit.dataset.edit&&(this.inputs.map(input=>{input.setAttribute("disabled","")}),this.labels.map(label=>{label.classList.remove("active")}),this.buttons.map(btn=>{btn.setAttribute("disabled",""),btn.classList.remove("active")}),this.edit.dataset.edit="hide",this.password.setAttribute("disabled",""),this.password.classList.remove("active"),this.edit.textContent="Edit information")}}update(){this.form=this._getElem(this.kwargs.form),this.inputs=this._getElems(this.kwargs.inputs,this.form),this.labels=this._getElems(this.kwargs.labels,this.form),this.buttons=this._getElems(this.kwargs.buttons,this.form),this.edit=this._getElem(this.kwargs.edit,this.form),this.editEvent()}valid(){const alerts={error:'<div class="alert alert-danger mt-3 shadow-sm alert-dismissible fade show border-0" role="alert">\n                        <div class="my-2">\n                            <div class="d-flex align-items-center justify-content-center">\n                                <i class="fa fa-exclamation-triangle me-2 fs-5" aria-hidden="true"></i>\n                                <h5 class="h5 m-0 p-0">Please fill in all the required information to complete creating your account</h5>\n                            </div>\n                            <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                        </div>\n                    </div>'},forValidNames=["first_name","email","company_email","company_name","company_tel","company_address"],forValidInputs=[],formInvalidInputs=[];forValidNames.map(name=>{forValidInputs.push(this.form.querySelector(`[name="${name}"]`))}),this.form.onsubmit=e=>{e.preventDefault();let valid=!0;if(forValidInputs.map(inp=>{""!=inp.value&&""!=inp.value.replace(/\s/g,"")||(inp.classList.add("form-error"),valid=!1,formInvalidInputs.push(inp))}),0==valid){forValidInputs.map(inp=>{inp.onfocus=()=>{inp.classList.remove("form-error")}});const exAlert=this.form.closest(".main").querySelector(".alert");null!=exAlert&&exAlert.remove(),this.form.insertAdjacentHTML("beforebegin",alerts.error),formInvalidInputs.map(elem=>{const managed=elem.closest(".client-info-managed"),managedTitle=managed.previousElementSibling;managed.classList.contains("active")||managed.classList.add("active"),managedTitle.classList.contains("active")||managedTitle.classList.add("active")})}else 1==valid&&e.target.submit()}}}class AddShipping{constructor(kwargs){this.form=this._getElem(kwargs.form),this.button=this._getElem(kwargs.button),this.shipping=this._getElems(kwargs.shipping,this.form),this.counter=this.shipping.length,this.formControl=kwargs.formControl,this._create(kwargs)}_create(kwargs){this.createNewForm(kwargs)}debug(info=this){return console.log(this),this}_getElem(selector,parent=document){const elem=parent.querySelector(selector);return elem}_getElems(selector,parent=document){const elems=[...parent.querySelectorAll(selector)];return elems}slacer(clone){let inputs=this._getElems("input",clone);inputs=inputs.filter(input=>{if("hidden"!==input.getAttribute("type"))return input}),inputs.map(input=>{let cloneId=input.getAttribute("id"),cloneName=input.getAttribute("name"),newId=cloneId.replace(0,this.counter),newName=cloneName.replace(0,this.counter);input.setAttribute("id",newId),input.setAttribute("name",newName),input.value=""})}createNewForm(kwargs){this.button.onclick=()=>{const clone=this.shipping[0].cloneNode(!0);this.counter+=1,this.form.insertAdjacentElement("beforeend",clone),this.totalForms=this._getElems(kwargs.total,this.form),this.totalForms.map(total=>{total.value=this.counter}),clone.dataset.shipping=this.counter;const title=this._getElem(kwargs.title,clone).textContent=this.counter,clientInfoDrop=new ElementsControl({manager:".client-info-manager",managed:".client-info-managed"});clientInfoDrop.toggler({}),this.slacer(clone),this.formControl.update()}}}document.addEventListener("DOMContentLoaded",()=>{const clientInfoDrop=new ElementsControl({manager:".client-info-manager",managed:".client-info-managed"});clientInfoDrop.toggler({});const formControl=new UserFormControl({form:"#client-info-form",edit:"[data-edit]",password:"#change-password",labels:".client-info__input-group--name",inputs:".form-control-client-info",buttons:"[data-hide-btn]"}),addShipping=new AddShipping({form:"#client-info-form",button:"#add-shipping-address",shipping:"[data-shipping]",total:"#id_form-TOTAL_FORMS",title:"[data-shipping-title]",formControl:formControl})});