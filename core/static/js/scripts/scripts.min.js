"use strict";class SendMessageToManager{constructor(kwargs){this.url=kwargs.url||"/mail/to/manager/",this.formSelector=kwargs.form||"#form_message",this.form=document.querySelector(this.formSelector),this.inputs=[...this.form.querySelectorAll('input[type="text"], textarea')],this.submit=this.form.querySelector('button[type="submit"]'),this.close=this.form.querySelector(".btn-close"),this.alert=document.querySelector(".message_alert"),this.message={subject:"",message:""}}init(){this._submit()}_buttonsSwitcher(set=!1){switch(set){case!1:this.submit.classList.remove("active"),this.submit.removeAttribute("disabled"),this.close.click();break;case!0:this.submit.classList.add("active"),this.submit.setAttribute("disabled",!0)}}_getData(){}_submit(){this.form.addEventListener("submit",e=>{e.preventDefault(),this._buttonsSwitcher(!0),this.inputs.map(inp=>{"subject"==inp.name?this.message.subject=inp.value:"message"==inp.name&&(this.message.message=inp.value)}),console.log(this),ajax(this.url,this.message,this._responce,this)})}_responce(responce,context){setTimeout(()=>{context._buttonsSwitcher(!1),console.log(context),context.alert.innerHTML="",context.alert.insertAdjacentHTML("afterbegin",`\n                <div class="alert alert-${responce.alert} mb-4 mt-2 shadow-sm alert-dismissible fade show border-0" role="alert" id="message_alert_info">\n                    <div class="my-2">\n                        <div class="d-flex align-items-center justify-content-center">\n                            <i class="fa fa-info me-2 fs-5" aria-hidden="true"></i>\n                            <h5 class="h5 m-0 p-0">${responce.message}</h5>\n                        </div>\n                        <button type="button" class="btn-close shadow-none border-none" data-bs-dismiss="alert" aria-label="Close"></button>\n                    </div>\n                </div>\n            `)},200)}}document.addEventListener("DOMContentLoaded",()=>{const canvasShow=new ElementsControl({manager:"#canvas-toggler",managed:"#nav-canvas"});canvasShow.toggler();const canvasHide=new ElementsControl({manager:"#exit-canvas",managed:"#nav-canvas"});canvasHide.toggler();const dropList=new ElementsControl({manager:".canvas__drop-list--trigger",managed:".canvas__drop-list--target"});dropList.toggler();const message=new SendMessageToManager({form:"#form_message"});message.init(),console.log(message)});